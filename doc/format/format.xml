<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">

  <chapter id="format-checking">

    <title>Format Checking with format-check</title>

    <para>
      Format-check analyzes whether the input ATerm conforms to the
      format that is specified in the RTG (Regular Tree Grammar).
    </para>

    <section>
      <title>Description</title>

      <para>
	Format-check verifies that the input ATerm is part of the
	language defined in the RTG. If this is not the case, then the
	ATerm contains format errors. format-check can operate in
	three modes: plain, visualize and XHTML.
      </para>

      <para>
	The plain mode is used if the other modes are not enabled. In
	the plain mode format errors are reported and no result is
	written the the output (stdout or a file). Hence, if
	format-check is included in a pipeline, then the following
	tool will probably fail. If the input term is correct, then it
	is written to the output.
      </para>

      <para>
	The visualize mode is enabled with the <code>--vis</code>
	option. In visualize mode format errors are reported and in a
	pretty-printed ATerm will be written to the output. All
	innermost parts of the ATerm that cause format errors are
	printed in red, if your terminal supports control characters
	for colors. If you want to browse through the ATerm with less,
	then you should use the <code>-r</code> flag.
      </para>

      <para>
	The XHTML mode is enabled with the <code>--xhtml</code>
	option. In XHTML mode format errors are reported and an report
	in XHTML will be written to the output. This report shows the
	parts of the ATerm that are not formatted correctly. Also,
	moving with your mouse over the nodes of ATerm, will show the
	non-terminals that have be inferred by format-check (do not
	use IE6. Firefox or Mozilla is recommended).
      </para>

      <para>
	Format-check reports all innermost format errors. That is,
	only the deepest format errors are reported. A format error is
	reported by showing the ATerm that is not in the correct
	format, and the inferred types of the children of the
	ATerm. In XHTML and visualize mode a format error of term in a
	list is presented by a red comma and term. This means that a
	type has been inferred for the term itself, but that it is not
	expected at this point in the list. If only the term is red,
	then no type could be inferred for the term itself.
      </para>

      <para>
	In all modes format-check succeeds (exit code 0) if the ATerm
	contains no format errors. If the term does contain format
	errors, then format-check fails (exit code 1).
      </para>

    </section>

    <section>
      <title>Example</title>

      <para>
	Consider the RTG generated in the example of sdf2rtg:
      </para>

      <screen><include href="Exp.rtg" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	The ATerm
      </para>

      <screen><include href="term1" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	is part of the language defined by this RTG. Therefore,
	format-check succeeds:
      </para>

      <screen><include href="format_succeed" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	Note that format-check outputs the input term in this case. In
	this way format-check can be used in a pipeline of tools. On
	the other hand, the ATerm
      </para>

      <screen><include href="term2" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	is not part of the language defined by this RTG. Therefore,
	the invocation of format-check fails. Format-check also
	reports which term caused the failure:
      </para>

      <screen><include href="format_failed" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	In large ATerms it might be difficult to find the incorrect
	subterm. To help with this, format-check supports the
	<code>--vis</code> argument. If this argument is used, then
	the result will pretty-printed (in the same way as PpATerm)
	and the incorrect parts will be printed in red.
      </para>

      <para>
	For example, consider this term:
      </para>

      <screen><include href="term3" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	format-check will visualize the errors in this ATerm:
      </para>

      <mediaobject>
	<imageobject role="html">
	  <imagedata format="PNG" fileref="http://catamaran.labs.cs.uu.nl/twiki/pt/pub/Tools/FormatCheck/vis-mode.png" />
	</imageobject>
      </mediaobject>

      <para>
	The XHTML mode shows the errors in red as well. Moreover, if
	you move your moves over the terms, then you'll see the
	inferred types of the term.
      </para>

      <screen><include href="format_xhtml" parse="text" xmlns="http://www.w3.org/2003/XInclude"/></screen>

      <para>
	You can now view the resulting file in your browser. You need
	a decent browser (Firefox or Mozilla. no IE).
      </para>

    </section>

  </chapter>

