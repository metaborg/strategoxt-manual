<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">

<chapter>
  <title>Syntax Definition and Pretty-Printing (*)</title>
       
<section>
  <title>Introduction</title>

  <para>

    This chapter shows how to define a syntax definition in SDF and
    how to derive a number of artifacts from such a definition, i.e.,
    a parser, a pretty-printer, and a Stratego signature. The chapter
    also introduces TIL, a Tiny Imperative Language, which is used in
    many of the examples.

  </para>

</section>

<section>
  <title>TIL: a Tiny Imperative Language</title>

  <para>

     TIL is a tiny imperative language designed for the demonstration
     of language and transformation definition formalisms. The
     language has two data-types, integers and strings. A TIL program
     consists of a list of statements, which can be variable
     declarations, assignments, I/O instructions, and control-flow
     statements. Statements can use expressions to compute values from
     integer and string constants, and the values of variables.

  </para>

  <para>
   
     The following example gives an impression of the language. 

  </para>

  <screen>file: til/xmpl/test1.til</screen>
  <screen><include parse="text" href="../../src/til/xmpl/test1.til"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>

<section>
  <title>Syntax Definition</title>

  <para>

    The syntax of TIL defined in SDF

  </para>

  <screen>file: til/syn/TIL.sdf</screen>
  <screen><include parse="text" href="../../src/til/syn/TIL.sdf"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>

<section>
  <title>Parse Table Generation</title>

  <para>

     The following <code>maak</code> script first collects the modules
     of the syntax definition and then generates a parse table. (The
     TIL syntax definition only consists of one definition.)

  </para>

  <screen>file: til/syn/maak</screen>
  <screen><include parse="text"
  href="../../src/til/syn/maak"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>

<section>
  <title>Parsing Programs</title>

  <para>

     The <code>sglri</code> tool parses a text file given a parse
     table. The result is an abstract syntax term in the ATerm
     format. In order to inspect this term it is useful to
     `pretty-print' it using the <code>pp-aterm</code> tool.

  </para>

  <screen>file: til/xmpl/parse-test</screen>
  <screen><include parse="text"
  href="../../src/til/xmpl/parse-test"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  
  <para>

     The result 

  </para>

  <screen>file: til/xmpl/test1.atil</screen>
  <screen><include parse="text"
  href="../../src/til/xmpl/test1.atil"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>

<section>
  <title>Signature</title>

  <para>

     The result 

  </para>

  <screen>file: til/sig/maak</screen>
  <screen><include parse="text"
  href="../../src/til/sig/maak"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  
  <para>

     Regular tree grammar generated from syntax definition

  </para>

  <screen>file: til/sig/TIL.rtg</screen>
  <screen><include parse="text"
  href="../../src/til/sig/TIL.rtg"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  
  <para>

     Stratego signature generated from regular tree grammar

  </para>

  <screen>file: til/sig/TIL.str</screen>
  <screen><include parse="text"
  href="../../src/til/sig/TIL.str"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>

<section>
  <title>Format Checking</title>

  <para>

     Check format of term using regular tree grammar

  </para>

</section>

<section>
  <title>Pretty-Printing</title>

  <screen>file: til/pp/maak</screen>
  <screen><include parse="text"
  href="../../src/til/pp/maak"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  <para>

     Generated pretty-print table

  </para>

  <screen>file: til/pp/TIL.pp</screen>
  <screen><include parse="text"
  href="../../src/til/pp/TIL.pp"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  <para>

     Applying pretty-print table

     <xref linkend="ref-ast2text" /> translates an abstract syntax
     term to text given a pretty-print table

     In fact ast2text is a composition of
     <xref linkend="ref-ast2abox" />
     and <xref linkend="ref-abox2text" />

  </para>


  <screen>file: til/xmpl/pp-test1</screen>
  <screen><include parse="text"
  href="../../src/til/xmpl/pp-test1"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  <para>

     The result 

  </para>

  <screen>file: til/xmpl/test1.txt1</screen>
  <screen><include parse="text"
  href="../../src/til/xmpl/test1.txt1"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>

<section>
  <title>Adapting the Pretty-Print Table</title>

  <screen>file: til/pp/TIL-pretty.pp</screen>
  <screen><include parse="text"
  href="../../src/til/pp/TIL-pretty.pp"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  <screen>file: til/xmpl/pp-test2</screen>
  <screen><include parse="text"
  href="../../src/til/xmpl/pp-test2"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  <para>

     The result 

  </para>

  <screen>file: til/xmpl/test1.txt2</screen>
  <screen><include parse="text"
  href="../../src/til/xmpl/test1.txt2"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

</section>


<section>
  <title>Restoring Parentheses</title>

  <screen>file: til/pp/til-parenthesize.str</screen>
  <screen><include parse="text"
  href="../../src/til/pp/til-parenthesize.str"
  xmlns="http://www.w3.org/2003/XInclude"/></screen>

  <para>

     pretty-printing with parenthesizing

  </para>

</section>

<section>
  <title>A Complete Pipeline</title>

  <para>

     a complete parse-transform-pretty-print pipeline

  </para>

  <para>

     a complete parse-transform-pretty-print pipeline

  </para>

  <para>

     a complete parse-transform-pretty-print pipeline

  </para>


</section>

    
</chapter>
