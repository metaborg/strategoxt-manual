module Expressions
imports Lexical
exports
  sorts Var Exp
  context-free syntax
    Id		-> Var {cons("Var")}
    Var         -> Exp 
    IntConst    -> Exp {cons("Int")}
    "-" Exp 	-> Exp {cons("Uminus")}
    Exp "*" Exp -> Exp {cons("Times"),left}
    Exp "+" Exp -> Exp {cons("Plus"),left}
    Exp "-" Exp -> Exp {cons("Minus"),left}
    Exp "=" Exp -> Exp {cons("Eq"),non-assoc}
    Exp ">" Exp -> Exp {cons("Gt"),non-assoc}
    "(" Exp ")" -> Exp {bracket}
exports
  context-free priorities
     "-" Exp 	 -> Exp {cons("Uminus")}
  >  Exp "*" Exp -> Exp {cons("Times"),left}
  > {left:
     Exp "+" Exp -> Exp {cons("Plus"),left}
     Exp "-" Exp -> Exp {cons("Minus"),left}}
  > {non-assoc:
     Exp "=" Exp -> Exp {cons("Eq"),non-assoc}
     Exp ">" Exp -> Exp {cons("Gt"),non-assoc}}
