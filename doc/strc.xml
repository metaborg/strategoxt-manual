<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<refentry lang="en">
  <refnamediv>
    <refname>strc</refname>
    <refpurpose>compiles Stratego programs to C or executable code</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>strc</command>
      <arg>-i <replaceable>file</replaceable></arg>
      <arg>-o <replaceable>file</replaceable></arg>
      <arg rep="repeat"><replaceable>options</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para>
      Stratego is a language for program transformation based on the
      paradigm of rewriting strategies.

      The Stratego compiler <command>strc</command> translates a Stratego
      program to a C program and to an executable if necessary. Stratego
      modules have file extension .str.
    </para>

    <para>
      Note that <command>strc</command> is a whole program compiler. This
      means that it completely reads all imported modules and then compiles
      the result in its entirety to one C program. Thus, there is no separate
      compilation for modules. This compilation scheme is prompted by some
      features of the language, and also allows aggressive optimization of
      programs. A downside however, is that compilation may take longer than
      expected. Even for a seemingly small module, a large part of the library
      of over 8000 lines of code is compiled. When developing, compile time
      can be reduced by reducing the optimization level.
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>

    <para>
      Compile module <filename><replaceable>M</replaceable>.str</filename> to
      an executable <filename><replaceable>M</replaceable></filename>
    </para>

    <cmdsynopsis>
      <command>strc</command>
      <arg choice="plain">-i <replaceable>M</replaceable></arg>
    </cmdsynopsis>

    <para>
      Use the strategy <replaceable>foo</replaceable> as main strategy instead of
      <function>main</function>.
    </para>

    <cmdsynopsis>
      <command>strc</command>
      <arg choice="plain">-i <replaceable>M</replaceable></arg>
      <arg choice="plain">--main <replaceable>foo</replaceable></arg>
    </cmdsynopsis>

    <para>
      Compile module <filename><replaceable>M</replaceable>.str</filename> to
      C code in file <filename><replaceable>M</replaceable>.c</filename>
    </para>

    <cmdsynopsis>
      <command>strc</command>
      <arg choice="plain">-i <replaceable>M</replaceable></arg>
      <arg choice="plain">-c</arg>
    </cmdsynopsis>

    <para>
      Include modules from directory <filename class="directory">../sig</filename>
    </para>

    <cmdsynopsis>
      <command>strc</command>
      <arg choice="plain">-i <replaceable>M</replaceable></arg>
      <arg choice="plain">-I ../sig</arg>
    </cmdsynopsis>
  </refsect1>

  <refsect1>
    <title>Options</title>

    <variablelist>
      <title>Common Options</title>

      <varlistentry>
        <term><option>-i <replaceable>file</replaceable></option></term>
        <listitem>
          <para>Main module to compile (required)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>-o       <filename><replaceable>file</replaceable></filename></option></term>
        <term><option>--output <filename><replaceable>file</replaceable></filename></option></term>
        <listitem>
	  <para>Write output to <filename><replaceable>file</replaceable></filename></para>
        </listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-I        <filename class="directory"><replaceable>dir</replaceable></filename></option></term>
        <term><option>--Include <filename class="directory"><replaceable>dir</replaceable></filename></option></term>
        <listitem>
	  <para>Include modules from directory <filename
	  class="directory"><replaceable>dir</replaceable></filename></para>
        </listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-m     <function><replaceable>s</replaceable></function></option></term>
	<term><option>--main <function><replaceable>s</replaceable></function></option></term>
        <listitem>
	  <para>
	    Use the strategy <function><replaceable>s</replaceable></function>
	    as main strategy instead of <function>main</function>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--C-Include <filename class="headerfile"><replaceable>file</replaceable></filename></option></term>
        <listitem>
	  <para>
	    Include C header 
	    <filename class="headerfile"><replaceable>file</replaceable></filename>
	    (<filename class="headerfile">"foo.h"</filename> or
	    <filename class="headerfile">&lt;foo.h&gt;</filename>)
	  </para>
        </listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-CI <filename class="directory"><replaceable>dir</replaceable></filename></option></term>
        <listitem>
	  <para>Include C header files from directory <filename
	  class="directory"><replaceable>dir</replaceable></filename></para>
        </listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-CL <filename class="directory"><replaceable>dir</replaceable></filename></option></term>
        <listitem>
	  <para>Include binary libraries from directory <filename
	  class="directory"><replaceable>dir</replaceable></filename></para>
        </listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-c</option></term>
	<listitem><para>Produce C code only (don't compile to executable)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--ast</option></term>
	<listitem><para>Produce Stratego abstract syntax tree</para></listitem>
      </varlistentry>
      
      <varlistentry>
	<term><option>-F</option></term>
	<listitem><para>Produce normalized specification</para></listitem>
      </varlistentry>
	
      <varlistentry>
	<term><option>--asfix</option></term>
	<listitem><para>Concrete syntax parts are not imploded</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--keep <replaceable>n</replaceable></option></term>
	<listitem><para>Keep intermediate results (0 = keep nothing)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-O <replaceable>n</replaceable></option></term>
	<listitem><para>Optimization level (0 = no optimization)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--fusion</option></term>
	<listitem><para>Toggle specialize applications of innermost (default: on)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--verbose <replaceable>i</replaceable></option></term>
	<listitem><para>Verbosity level i (default 1)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-S</option></term>
	<term><option>--silent</option></term>
	<listitem><para>Silent execution (same as --verbose 0)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-W</option></term>
	<term><option>--warning</option></term>
	<term><option>--maybe-unbound-warnings</option></term>
	<term><option>--no-maybe-unbound-warnings</option></term>
	<listitem><para>Set warning level (-W all to switch all warnings on)</para></listitem>
      </varlistentry>

      <varlistentry>
	<term><option>-v</option></term>
	<term><option>--version</option></term>
	<listitem>
	  <para>Display program's version</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--help</option></term>
	<term><option>-h</option></term>
	<term><option>-?</option></term>
	<listitem>
	  <para>Display usage version</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <para><ulink url="http://www.stratego-language.org">Stratego website</ulink></para>
  </refsect1>

  <refsect1>
    <title>Reporting Bugs</title>

    <para>
      Please report bugs to <email>stratego-bugs@cs.uu.nl</email>
    </para>
  </refsect1>

  <include href="lgpl-copyright.xml" xmlns="http://www.w3.org/2001/XInclude"/>
</refentry>
