<chapter
   xml:id="library-options"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2003/XInclude">

  <title>Command-line Options (*)</title>
  
  <para>
    When a compiled Stratego program is first started, 
    the initial value of the current term is a list
    containing the command line arguments to the program.
	The library contains various convenience strategies for
	parsing this list, handling options, reading input
	terms from <filename>stdin</filename> and
	writing terms to <filename>stdout</filename>.
  </para>
  
  <para>
    The primary family of strategies for command line handling
    include <code>io-wrap(s)</code>, <code>io-wrap(opts, s)</code>
    and <code>io-wrap(opts, usage, about, s)</code>. By using
    one of these, a standard package of functionality will be
    provided by your program. Consider using the simplest of
    these on the simplest of Stratego programs:
  </para>
  
<screen>
module prog
imports lib
strategies
  main = io-wrap(id)
</screen>

  <para>
    This program should be put into <filename>prog.str</filename>
    and compiled and run with <code>--help</code>.
  </para>
  
<screen>
<prompt>$</prompt> strc -i prog.str
....
<prompt>$</prompt> ./prog --help
Options:
   -i f|--input f   Read input from f
   -o f|--output f  Write output to f
   -b               Write binary output
   -S|--silent      Silent execution (same as --verbose 0)
   --verbose i      Verbosity level i (default 1)
                    ( i as a number or as a verbosity descriptor:
                      emergency, alert, critical, error,
                      warning, notice, info, debug, vomit )
   -k i | --keep i  Keep intermediates (default 0)
   --statistics i  Print statistics (default 0 = none)
   -h|-?|--help     Display usage information
   --about          Display information about this program
   --version        Same as --about

Description:
</screen>
  
  <para>
    As indicated by the help screen, the input term
    to <command>prog</command> can now be specified using the 
    <code>-i</code> option, and output can be stored to
    a file using the <code>-o</code> option. By default,
    <filename>stdin</filename> is read, and
    <filename>stdout</filename> is written to.
  </para>
  
  <para>
    Setting about
  </para>
  
  <para>
    Setting description
  </para>
  
  <para>
    Adding options
  </para>
  
  <para>
    <code>option-wrap(opts, usage, about, announce, s)</code>
  </para>
</chapter>

