<chapter xml:id="installation"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xl="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2003/XInclude">

  <title>Installation</title>

  <section>
    <title>What do I Need?</title>
    
    <para>
      The Stratego/XT project distributes several packages. So let's
      first make clear what you actually need to install. Stratego/XT
      itself is a language independent toolset for constructing
      program transformation systems. Language-specific extensions of
      Stratego/XT are distributed as separate packages, so that you
      only have to install what you really need for your particular
      application.
    </para>

    <formalpara>
      <title>Stratego/XT</title>
      <para>
	All Stratego/XT users need to install the ATerm Library
	(<code>aterm</code>), the SDF2 Bundle
	(<code>sdf2-bundle</code>) and Stratego/XT
	(<code>strategoxt</code>). These packages enable you to
	compile Stratego programs, and provide the basic
	infrastructure for parsing and pretty-printing source files.
      </para>
    </formalpara>

    <formalpara>
      <title>Stratego Shell</title>
      <para>
	Optionally, you can install the Stratego Shell, which provides
	an interpreter for Stratego and an interactive command-line
	for experimenting with the Stratego language. The Stratego
	Shell is used in the Stratego part of this tutorial to
	demonstrate the features of the Stratego language. The
	Stratego Shell is also very useful for small experiments with
	strategies of the Stratego Library.
      </para>
    </formalpara>
    
    <formalpara>
      <title>Extensions</title>
      <para>
	Then there are the language-specific packages. These packages
	provide the basic infrastructure for parsing, pretty-printing,
	and in some cases also analyzing source files of a specific
	programming language. Reusing such a package enables you to
	get started immediately with the implementation of an actual
	transformation. Examples of such packages are Java-front,
	Dryad, Transformers C and C++, BibTeX Tools, Prolog Tools,
	AspectJ Front, and SQL Front. Also, there are some
	demonstration packages, for example Tiger Base, which
	implements a compiler for the Tiger language, and Java Borg,
	which demonstrates the implementation of language
	embeddings. All these packages can separately be installed as
	extensions of Stratego/XT.
      </para>
    </formalpara>

    <formalpara>
      <title>Examples of the Stratego/XT Manual</title>
    
      <para>
	All the code examples in this manual are available for
	separate download, so that you can experiment based on these:
	<link xl:href="./examples.tar.gz">examples.tar.gz</link>
      </para>
    </formalpara>
  </section>

  <section>
    <title>Instructions</title>
  
    <para>
      First of all, you have to decide which deployment mechanism you
      want to use. For users of RPM-based Linux distributions (such as
      Redhat, Fedora Core, and SUSE), we advise to use RPMs, which are
      available from the release page. For Cygwin users we provide
      pre-compiled binaries that can simply be unpacked. For Mac OS X
      users, we provide these binary packages as well, but they can
      also use the Nix deployment system, which will guarantee that
      all dependencies are installed correctly. Nix packages are also
      available for Linux users. Finally, it is always possible to
      build from source.
    </para>

    <para>
      Next, download the required packages. Stratego/XT depends on the
      ATerm Library and the SDF2 Bundle, so you have to download
      <code>aterm</code>, <code>sdf2-bundle</code>, and
      <code>strategoxt</code>. The downloads are all available at the
      release page of Stratego/XT.
    </para>
    
    <section>
      <title>Using Source Distributions</title>
      
      <section>
	<title>Installation of aterm and sdf2-bundle</title>
	
	<para>
	  The following sequence of commands takes care of building
	  and installing the aterm and the sdf2-bundle in
	  <filename>/usr/local</filename>.
	</para>
	
	<screen>
<prompt>$</prompt> tar zxf aterm-<replaceable>version</replaceable>.tar.gz
<prompt>$</prompt> cd aterm-<replaceable>version</replaceable>
<prompt>$</prompt> ./configure
<prompt>$</prompt> make
<prompt>$</prompt> make install
<prompt>$</prompt> cd ..

<prompt>$</prompt> tar zxf sdf2-bundle-<replaceable>version</replaceable>.tar.gz
<prompt>$</prompt> cd sdf2-bundle-<replaceable>version</replaceable>
<prompt>$</prompt> ./configure --with-aterm=/usr/local
<prompt>$</prompt> make
<prompt>$</prompt> make install
<prompt>$</prompt> cd ..
</screen>

	  <para>
	    If you want to install the packages at a different
	    location (i.e. not <filename>/usr/local</filename>, you
	    should specify a <code>--prefix</code> in the configure
	    command. For example:
	  </para>
	  
	  <screen>
<prompt>$</prompt> ./configure --prefix=/opt/aterm
<prompt>$</prompt> ./configure --prefix=/opt/sdf2-bundle --with-aterm=/opt/aterm
</screen>

	  <para>
	    In this case, it possible that the sdf2-bundle cannot find
	    the aterm package. To tell the sdf2-bundle where it should
	    look for the ATerm Library, you can use the
	    <code>--with-aterm</code> argument:
	  </para>

	  <screen>
<prompt>$</prompt> ./configure --prefix=/opt/sdf2-bundle --with-aterm=/opt/aterm
</screen>

	  <para>
	    Alternatively, you can add the location of the ATerm
	    Library to the <code>PKG_CONFIG_PATH</code>, which the
	    configure script will use for searching packages. In this
	    way, you don't need to specify the <code>--with-</code>
	    arguments. More information about this is available in the
	    pkg-config documentation (<code>man
	    pkg-config</code>). For example:
	  </para>

	  <screen>
<prompt>$</prompt> export PKG_CONFIG_PATH=/opt/aterm/lib/pkgconfig:/opt/sdf2-bundle/lib/pkgconfig
</screen>
	</section>

	<section>
	  <title>Installation of Stratego/XT</title>

	  <para>
	    Unpack, configure, make and install Stratego/XT using the
	    following commands:
	  </para>

	  <screen>
<prompt>$</prompt> tar zxf strategoxt-<replaceable>version</replaceable>.tar.gz
<prompt>$</prompt> cd strategoxt-<replaceable>version</replaceable>
<prompt>$</prompt> ./configure --with-aterm=/usr/local --with-sdf=/usr/local
<prompt>$</prompt> make
<prompt>$</prompt> make install
</screen>

	  <para>
	    If you want to install StrategoXT at a different prefix,
	    you should specify a <code>--prefix</code>. If you
	    installed the ATerm Library and the SDF2 Bundle at a
	    different location, you should specify their location
	    using <code>--with-aterm</code> and
	    <code>--with-sdf</code>. For example:
	  </para>

	  <screen>
<prompt>$</prompt> ./configure --prefix=/opt/strategoxt \
  --with-aterm=/opt/aterm --with-sdf=/opt/sdf2-bundle
</screen>

	  <para>
	    As mentioned earlier, you can alternatively add the
	    location of the ATerm Library and the SDF2 Bundle to the
	    <code>PKG_CONFIG_PATH</code>, which the configure script
	    will use for searching packages.
	  </para>
	</section>

	<section>
	  <title>Installation of Stratego Shell, Java Front, etc.</title>
	  
	  <para>
	    The Stratego Shell, Java Front, Tiger Base and several
	    other packages depend on Stratego/XT. For all these
	    packages, you can use the following commands:
	  </para>

	  <screen>
<prompt>$</prompt> tar zxf <replaceable>package</replaceable>-<replaceable>version</replaceable>.tar.gz
<prompt>$</prompt> cd <replaceable>package</replaceable>-<replaceable>version</replaceable>
<prompt>$</prompt> ./configure
<prompt>$</prompt> make
<prompt>$</prompt> make install
</screen>

          <para>
	    For all these packages, you should use the
	    <code>--with-aterm=<replaceable>dir</replaceable></code>,
	    <code>--with-sdf=<replaceable>dir</replaceable></code>,
	    and
	    <code>--with-strategoxt=<replaceable>dir</replaceable></code>
	    options if you installed these packages at non-standard
	    locations. Alternatively, you can extend the
	    <code>PKG_CONFIG_PATH</code> to include the locations of
	    the ATerm Library, SDF2 Bundle, and Stratego/XT.
	  </para>
	</section>
    </section>

      <section>
	<title>Using Binary RPMs</title>

	<para>
	  Installing binary RPMs is very easy. Install the RPMs by
	  running <code>rpm -i *</code> in the directory where you
	  have downloaded the RPMs. Use the upgrade option <code>rpm
	  -U *</code> if you have already installed earlier versions
	  of RPMs for aterm, strategoxt or the sdf2-bundle. Of course
	  you can also install the RPMs one by one by specifying the
	  filenames of the RPMs.
	</para>
      </section>

      <section>
	<title>Using the Nix Deployment System</title>
	<para>
	  Using the Nix deployment system for the installation of
	  Stratego/XT is a good idea if you need to run multiple
	  versions of Stratego/XT on the same system, if you will need
	  to update other Stratego/XT related packages regularly, or
	  if there is a problem with installation from source at your
	  system. The Nix deployment system is designed to guarantee
	  that the Stratego/XT that we are using on our system is
	  <emphasis>exactly</emphasis> reproduced on your system. This
	  basically guarantees that the installation will never fail
	  because of missing dependencies or mistakes in the
	  configuration.
	</para>

	<para>
	  The release page of all the packages refer to Nix packages
	  that can be installed using
	  <code>nix-install-package</code>.
	</para>
      </section>

<!--      <section>
	<title>Using Binary Distributions fore Cygwin and MacOS X (*)</title>

	<xi:include href="../workinprogress.xml"/>
      </section> -->
  </section>
</chapter>
