<section
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2003/XInclude">

    <title>Examples: Defining Context-Free Syntax</title>

      <para>
	<xref linkend="Fig-RegularExpressions"/> illustrates the use of
	these operators in the extension of the expression language with
	statements and function declarations. Lists are used in numerous
	places, such as for the sequential composition of statements
	(<code>Seq</code>), the declarations in a let binding, and the
	formal and actual arguments of a function (<code>FunDec</code>
	and <code>Call</code>). An example function definition in this
	language is:
<screen>
function fact(n, x) =
  if n > 0 then fact(n - 1, n * x) else x
</screen>
      </para>

      <para>
	Constructor annotations
      </para>

  <para>
    bracket annotations
  </para>

      <figure xml:id="Fig-RegularExpressions">
	<title>
	  Syntax definition with regular expressions.
	</title>
	<showfile root="." file="xmpl/Statements.sdf"/>
      </figure>

  <section>
    <title>More on Defining Whitespace and Comments</title>

<programlisting>
context-free restrictions
  LAYOUT? -/- [\ \t\12\n\r]</programlisting>

    <para>
      Why follow restrictions on whitespace is necessary
    </para>

<programlisting>
context-free restrictions
  LAYOUT?  -/- [\/].[\*]
  LAYOUT?  -/- [\/].[\/]</programlisting>
  </section>
</section>
  
