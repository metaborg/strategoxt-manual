<chapter xml:id="stratego-dev"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2003/XInclude">

  
  <title>Stratego Developer Guide</title>
  
  <para>
    There are many interesting and less interesting improvements that
    can be made to the Stratego implementation. Anyone who is
    interested in doing some work on Stratego/XT.
  </para>
  
  <para>
    This page lists guidelines and tips for contributing to the
    sources of Stratego/XT. This page is not about contributing to
    documentation, external packages that use Stratego/XT, or
    whatever.
  </para>

  <section>
    <title>Baseline development</title>

    <section>
      <title>What is a baseline and why do I need it?</title>

      <para>
       A baseline is a snapshot of the Stratego/XT source repository that
       only requires a C compiler to build itself. It is used for the traditional
       "bootstrapping" which is so common in the world of compilers.
      </para>
               
      <para>
       The compiler for Stratego is implemented in Stratego. Also, many of the
       tools used to build Stratego/XT are written in Stratego and depend on
       themselves. Therefore, you will need a full Stratego/XT environment to 
       build the Stratego/XT environment. This process is called bootstrapping.
       The baseline provides the initial Stratego/XT environment.
      </para>
	  
      <para>
       Unlike many bootstrapping compilers, the baseline provided for
       Stratego/XT is not a pre-built binary. It is a a source release of
       Stratego that requires a C compiler to build. We can therefore boostrap
       Stratego/XT on any of the supported platforms, with just one baseline.
      </para>
	  
      <para>
       Bootstrapping using the baseline is only necessary for developers of
       Stratego/XT itself. Normal users of Stratego/XT receive tarballs which
       do not need a baseline: they contain all generated and bootstrapped
       sources. See [[LatestSources][installation from Subversion]]
       for instructions on how to install Stratego/XT from
       Subversion.
      </para>

      <para>
       The big advantage of a baseline is that the development process of 
       Stratego/XT becomes cleaner and more robust. In the past, the bootstrapped
       sources were kept alongside the normal source code in the Subversion
       repository. This was very fragile and required great care on the part of
       the contributors. The baseline setup is much easier to use and a lot safer.
       We hope this will encourage contributions.
      </para>

    </section>

    <section>
      <title>Baseline restrictions</title>

      <para>
	Since we are using a baseline, you cannot *use* a new feature
	you have added to Stratego/XT in Stratego/XT itself until this
	feature has made it to the baseline. Remember that Stratego/XT must
	be built by the baseline.
      </para>

      <para>
	This might sound difficult, but in practice it is easy to
	ensure that you don't do this. You should use the baseline we
	provide to compile Stratego/XT from Subversion and you should
	not change the configuration of Stratego/XT with this baseline
	after installation. The baseline now ensures that you are not
	using new features that you've added to Stratego/XT: it will
	just not compile.
      </para>

    </section>

    <section>
      <title>Baseline upgrading</title>

      <para>
	Baselines are taken always from the buildfarm. The baselines are
	thoroughly checked there. If the build job for a particular revision
	of Strateo/XT does not succeed, this revision cannot be promoted to a
	new baseline. This avoids us getting into nasty bootstrap problems because
	of uncaught build failures. In general, the release of a new baseline is
	careful process.  Baselines will never be created in an ad-hoc way on 
	machines of developers.
      </para>

      <para>
	Picking a successful build from the buildfarm as a new baseline is done by
	hand. If you have added a feature that would you like to have in the baseline
	as soon as possible, then please request a baseline update at
	=stratego-dev@cs.uu.nl= or the IRC channel <command>#stratego</command>.
      </para>

    </section>
  </section>

  <section>
    <title>Contributing</title>

    <section>
      <title>Committing your changes</title>

      <para>
	Although it is time-consuming, it is strongly advised to run a
	=make check= on the complete source tree before committing
	anything.
      </para>

      <para>
	Before committing you should review the files that you have
	modified. After a =make clean= and =make bootclean= the =svn
	status= will show these files. We have configured the source
	tree not to show files in this status overview that are not
	important. Please use =svn diff= to verify that your changes are
	as intended. Further, please try to keep the granularity of the
	commits to one fix per commit. Specifically, do not commit many,
	unrelated fixes in one go.
      </para>

      <para>
	Please explain your changes in the =ChangeLog= of the
	subpackages. Also, use this changelog as your Subversion
	commit message.
      </para>

    </section>

    <section>
      <title>Submitting your changes</title>

      <para>
	We are fond of patches submitted by users. You don't have to
	fix a big issue: small fixes in error reporting and
	documentation of tools are very valuable as well. Please
	contribute, or at least report, if anything annoys you!
      </para>

    </section>

  </section>


</chapter>
