<refentry xml:lang="en" xml:id="ref-pack-sdf"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2003/XInclude">

  <refnamediv>
    <refname>pack-sdf</refname>
    <refpurpose>packs a set of SDF modules into a single definition</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>pack-sdf</command>
      <arg>-I <replaceable>dir</replaceable> | --include <replaceable>dir</replaceable></arg>
      <arg>-Idef <replaceable>lang</replaceable></arg>
      <arg>--dep <replaceable>file</replaceable></arg>
      <arg>-of <replaceable>format</replaceable></arg>
      <arg>-i <replaceable>file</replaceable> | --input <replaceable>file</replaceable></arg>
      <arg>-o <replaceable>file</replaceable> | --output <replaceable>file</replaceable></arg>
      <arg>-b</arg>
      <arg>-S | --silent</arg>
      <arg>--verbose <replaceable>level</replaceable></arg>
      <arg>-k <replaceable>level</replaceable> | --keep <replaceable>level</replaceable></arg>
      <arg>-h | -? | --help</arg>
      <arg>--about</arg>
      <arg>--version</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>
      An SDF syntax definition consists of a set of
      modules. <command>pack-sdf</command> collects all modules
      imported by module
      <filename><replaceable>m</replaceable></filename> in file
      <filename><replaceable>m</replaceable>.sdf</filename> and
      creates a combined syntax definition in file
      <filename><replaceable>m</replaceable>.def</filename>.
    </para>

    <para>
      The search order for SDF modules is:
      <orderedlist>
	<listitem>
	  <para>
	    The directory of the main module specified with the
	    <option>-i</option> option
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The specified include options (<option>-I</option>), in the order
	    they are given on the command-line.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    The XTC repository
	  </para>
	</listitem>
      </orderedlist>
    </para>

    <refsection>
      <title>Error Reporting</title>

      <para>
        <command>pack-sdf</command> checks if the module name specified in an 
        SDF module file, corresponds to the actual filename. Having different
        names can lead to subtle errors which are difficult to find.
      </para>
      
      <para>
        Missing modules will be reported by <command>pack-sdf</command>. Usually,
        the module is not really missing, but the name of this import is
        incorrect. Therefore, <command>pack-sdf</command> reports the module(s)
        from where the 'missing' module is imported. <command>pack-sdf</command>
        prints a detailed report of all missing modules and the module where these
        are imported.
      </para>
    </refsection>

    <refsection>
      <title>Generation of Dependency Files</title>

      <para>
	  <command>pack-sdf</command> supports the creation of a dependency file
	  suitable for inclusion in a <filename>Makefile</filename>. 
	  <link linkend="ref-autoxt">AutoXT</link>'s <filename>Makefile.xt</filename>
	  will instruct <command>pack-sdf</command> to do this, so there is no need
	  to specify dependencies of SDF files by hand.
      </para>
    </refsection>
  </refsection>

  <refsection>
    <title>Options</title>

    <variablelist>
      <title>File Options</title>

      <varlistentry>
        <term><option>--dep <replaceable>file</replaceable>.dep</option></term>
        <listitem>
        <para>
          Write make dependencies to <filename><replaceable>file</replaceable>.dep</filename>
        </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>-I <replaceable>dir</replaceable></option></term>
        <listitem>
          <para>
            Include modules from directory <replaceable>dir</replaceable>. 
            <command>pack-sdf</command> will give a warning if the directory does not exist.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>-Idef <replaceable>file</replaceable>.def</option></term>
        <listitem>
          <para>
            Include modules from SDF definition in file <filename><replaceable>file</replaceable>.def</filename>.
            <command>pack-sdf</command> will give a warning if the file does not exist.
          </para>
        </listitem>
      </varlistentry>
      
      <varlistentry>
        <term><option>-of <replaceable>format</replaceable></option></term>
        
        <listitem>
          <para>
            Use output format <replaceable>format</replaceable>, which must be either of
            <code>txt</code>, <code>asfix</code> or <code>ast</code>.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    
    <xi:include href="common-io-options.xml"/>
    <xi:include href="common-debugging-options.xml"/>
    
  </refsection>

  <refsection>
    <title>Example</title>
    
    <para>
      Issuing the following command will collapse all external SDF modules references
      found in the <filename>lang.sdf</filename> file into one single definition, by searching
      the local directory, then the <filename>lang/</filename>. The result is written to
      <filename>lang.def</filename>. All file dependencies will be computed and placed in
      a <command>make</command>-compatible file, called <filename>lang.dep</filename>:
    </para>
    
    <screen><prompt>$ </prompt>pack-sdf -I lang --dep lang.dep -i lang.sdf -o lang.def</screen>
  </refsection>
  <xi:include href="reporting-bugs.xml"/>
  <xi:include href="lgpl-copyright.xml"/>
</refentry>
