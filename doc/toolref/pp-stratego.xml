<refentry lang="en" id="ref-pp-stratego">
  <refnamediv>
    <refname>pp-stratego</refname>
    <refpurpose>pretty-prints a Stratego program </refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>pp-stratego</command>
      <arg>-i <replaceable>file</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>
      The <command>pp-stratego</command> utility is used to pretty-print
      Stratego source code to concrete syntax. It has two different modes
      of operation, depending on whether the input is in abstract syntax
      (an <command>.rtree</command> file) or concrete syntax (an 
      <command>.str</command> file).
    </para> 
    
    <para>
      In concrete syntax mode, <command>pp-stratego</command> pretty-prints
      a Stratego module in concrete syntax (<filename>.str</filename>) to
      concrete syntax by first parsing it and  afterwards pretty printing
      it. This is a useful operation for inspecting the meaning of concrete
      object syntax fragments. This is the default mode.
    </para>
    
    <para>
      In abstract syntax mode, <command>pp-stratego --abstract</command>
      pretty-prints a Stratego module in abstract syntax (<filename>.rtree</filename>)
      to Stratego concrete syntax.
    </para>

  </refsection>

  <refsection>
    <title>Options</title>

    <variablelist>
      <title>Input/Output Options</title>

      <varlistentry>
	<term><option>--abstract</option></term>
	<listitem>
	  <para>
	    Input Stratego module is in abstract syntax.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    
    <include href="common-io-options.xml" xmlns="http://www.w3.org/2003/XInclude"/>
    <include href="common-debugging-options.xml" xmlns="http://www.w3.org/2003/XInclude"/>
  </refsection>

  <include href="reporting-bugs.xml" xmlns="http://www.w3.org/2003/XInclude"/>
  <include href="lgpl-copyright.xml" xmlns="http://www.w3.org/2003/XInclude"/>
</refentry>
