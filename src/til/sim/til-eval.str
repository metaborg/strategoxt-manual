module til-eval
imports TIL
rules

  EvalAdd :
    Add(Int(i), Int(j)) -> Int(<addS>(i,j))

  EvalAdd :
    Add(String(i), String(j)) -> String(<conc-strings>(i,j))

  EvalSub :
    Sub(Int(i), Int(j)) -> Int(<subtS>(i,j))

  EvalMul :
    Mul(Int(i), Int(j)) -> Int(<mulS>(i,j))

  EvalDiv :
    Div(Int(i), Int(j)) -> Int(<divS>(i,j))

  EvalMod :
    Mod(Int(i), Int(j)) -> Int(<modS>(i,j))

  EvalLt :
    Lt(Int(i), Int(j)) -> Int(<if ltS then !"1" else !"0" end>(i,j))

  EvalGt :
    Gt(Int(i), Int(j)) -> Int(<if gtS then !"1" else !"0" end>(i,j))

  EvalEqu :
    Equ(Int(i), Int(j)) -> Int(<if eq then !"1" else !"0" end>(i,j))
    
  EvalNeq :
    Neq(Int(i), Int(j)) -> Int(<if eq then !"0" else !"1" end>(i,j))
    
  AddZero :
    Add(e, Int("0")) -> e

  AddZero :
    Add(Int("0"), e) -> e

  MulOne :
    Mul(e, Int("1")) -> e

  MulOne :
    Mul(Int("1"), e) -> e

  EvalIf :
    IfElse(Int("0"), st1*, st2*) -> Block(st2*)

  EvalIf :
    IfElse(Int(i), st1*, st2*) -> Block(st1*)
    where <not(eq)>(i, "0")

  EvalWhile :
     While(Int("0"), st*) -> Block([])
